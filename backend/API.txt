@app.route('/customer',methods=['GET'])
def get_customer_data():

    customer_data=Customer.query.all()

    customer_list=[]
    for customer in customer_data:
        customer_list.append({
            "username": customer.username,
            "customer_id" : customer.customer_id,
            "name" : customer.name,
            "email_id" : customer.email_id,
            "city" : customer.city,
            "pincode" : customer.pincode
        })
    
    return jsonify(customer_list)

@app.route('/customer', methods=['POST'])
def post_customer():
    nomi = pgeocode.Nominatim('IN')
    data = request.get_json()
    last_customer = db.session.query(Customer.customer_id).order_by(Customer.customer_id.desc()).first()
    customer_id = 'CUSTOMER' + str(int(last_customer[0][-4:]) + 1) if last_customer else 'CUSTOMER1001'
    username = data['username']
    name = data['name']
    email_id = data['email_id']
    pincode = data['pincode']
    location = nomi.query_postal_code(str(pincode))
    city = str(location.county_name)
    password = data['password']
    role = "CUSTOMER"
    
    new_customer = Customer(username=username, customer_id=customer_id, name=name, email_id=email_id, city=city, pincode=pincode)
    new_user = User(username=username, password=password, role=role)
    
    db.session.add(new_customer)
    db.session.add(new_user)
    db.session.commit()

    return {"message": "Item added successfully!"}, 200

@app.route('/customer/<string:customerid>',methods=['GET'])
def get_customer(customerid):
    customer_data = db.session.query(Customer).filter_by(customer_id=customerid)
    customer_list=[]
    for customer in customer_data:
        customer_list.append({
            "username": customer.username,
            "customer_id" : customer.customer_id,
            "name" : customer.name,
            "email_id" : customer.email_id,
            "city" : customer.city,
            "pincode" : customer.pincode
        })
    return jsonify(customer_list)

@app.route('/update-customer',methods=['PUT'])
def updatecustomer():
    request_data = request.get_json()
    customer = db.session.query(Customer).filter_by(customer_id=request_data['customer_id']).first()
    if customer:
        customer.email_id = request_data['email_id']  
        db.session.commit() 
        msg="SUCCESFUL"
    else:
        msg="FAILURE"
    return {"message": msg}, 200

@app.route('/deleteCustomer/<string:customer_id>', methods=['DELETE'])
def deletecustomer(customer_id):
    customer = Customer.query.filter_by(customer_id=customer_id).first()
    if customer:
        db.session.delete(customer)
        db.session.commit()
        return {"message": "Customer and related records deleted successfully!"}, 200
    else:
        return {"message": "Customer not found!"}, 404